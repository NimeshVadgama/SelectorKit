{"name":"SelectorKit","body":"### Query Views with CSS like Selectors\r\n\r\nSelector Kit provides clean and strong way to select views through *selectors*. This is like querying HTML elements with jQuery using CSS selectors. This can be used for testing, but there is no Apple's private (hidden) APIs used and may be shipped with your production code (at your own lisk).\r\n\r\n### Syntax\r\n\r\n```\r\nselector ::= selector component\r\n           | component\r\n\r\ncomponent ::= raw_component | '<' raw_component '>'\r\n\r\nraw_component ::= E | E quantifiers | E quantifiers identifier | E identifier\r\n                | identifier\r\n\r\nE ::= view-class-name\r\n    | view-class-name\r\n    | '*'\r\n\r\nquantifiers ::= quantifiers quantifier\r\n              | ε\r\n\r\nquantifier ::= '[' attribute_quantifiers ']'\r\n             | ':' pseudo_class_quantifier\r\n\r\nattribute_quantifiers ::= attribute_quantifiers ',' attribute_quantifier\r\n                        | attribute_quantifier\r\n\r\nattribute_quantifier ::= attribute_name attribute_relation attribute_value\r\n                       | attribute_name\r\n\r\nattribute_name ::= identifier | string\r\n\r\nattribute_relation ::= '=' | '^=' | '$=' | '*='\r\n\r\nattribute_value ::= identifier | string | number\r\n\r\npseudo_class_quantifier ::= 'first-child'\r\n                          | 'last-child'\r\n                          | 'nth-child(' number ')'\r\n                          | 'nth-of-type(' number ')'\r\n                          | 'marked(' string ')'\r\n                          | 'tagged(' number ')'\r\n\r\nidentifier ::= '#' identifier\r\n             | '#' string\r\n```\r\n\r\n#### Examples\r\n\r\n```\r\nUITableViewCell#'hello-button' UILabel:first-child[text='hello world']\r\nUITableViewCell#\"author's name\" UILable:nth-child(3)\r\n#items-table <:UITableViewCell UILabel[isHidden]\r\n```\r\n\r\n### Semantics (excerpt)\r\n\r\nThe method `- (NSArray*)select:(UIView*)` of `SelectorKit` returns array of views such that `c... c ⊦ view... view`.\r\n\r\n```\r\n** Sequence **\r\n\r\nc... ⊦ view...    c ⊦ view\r\n-----------------------------\r\nc1... c2... c ⊦ view... view\r\n\r\n** Single component **\r\n\r\nE ⊦ view   quantifier_1 ⊦ view  ...  quantifier_n ⊦ view  identifier ⊦ view\r\n--------------------------------------------------------------------------\r\nE quantifier_1 .. quantifier_n identifier ⊦ view\r\n\r\n** Exact class **\r\n\r\n[NSStringFromClass([view class]) isEqualToString:view-class-name]\r\n------------------------------------------------------------------\r\n'<' view-class-name '>' ⊦ view\r\n\r\n** Subclass **\r\n\r\n[view isKindOfClass:NSClassFromString(view-class-name)]\r\n--------------------------------------------------------\r\nview-class-name ⊦ view\r\n\r\n** Wildcard **\r\n\r\n'*' ⊦ view\r\n\r\n** Attribute existence **\r\n\r\nview.name != nil\r\n-----------------\r\n[name] ⊦ view\r\n\r\n** Comparison **\r\n\r\n[view.name isEqualToString:value]\r\n----------------------------------\r\n[name=value] ⊦ view\r\n\r\n** Identifier **\r\n\r\n[view.accessibilityIdentifier isEqualToString:identifier]\r\n----------------------------------------------------------\r\n# identifier ⊦ view\r\n\r\n```\r\n\r\n### Authors and Contributors\r\n\r\nDeveloped by @soutaro.\r\n\r\nLicensed under MIT license.","tagline":"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}